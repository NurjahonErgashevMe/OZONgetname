# build_exe.py - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è OZONParser.exe
import os
import sys
import subprocess
import shutil
from pathlib import Path

def get_selenium_stealth_path():
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –ø—É—Ç—å –∫ selenium_stealth"""
    try:
        import selenium_stealth
        stealth_path = os.path.dirname(selenium_stealth.__file__)
        js_path = os.path.join(stealth_path, 'js')
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø—É—Ç—å –∫ selenium_stealth: {stealth_path}")
        print(f"‚úÖ –ü—É—Ç—å –∫ JS —Ñ–∞–π–ª–∞–º: {js_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ JS —Ñ–∞–π–ª–æ–≤
        if os.path.exists(js_path):
            js_files = os.listdir(js_path)
            print(f"üìÑ JS —Ñ–∞–π–ª—ã: {js_files}")
            return stealth_path, js_path
        else:
            print("‚ùå –ü–∞–ø–∫–∞ JS –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return stealth_path, None
            
    except ImportError:
        print("‚ùå selenium_stealth –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return None, None

def check_and_create_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º links.json –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if not os.path.exists('links.json'):
        print("üìù –°–æ–∑–¥–∞—é —Ñ–∞–π–ª links.json...")
        with open('links.json', 'w', encoding='utf-8') as f:
            f.write("# –§–∞–π–ª –¥–ª—è —Å—Å—ã–ª–æ–∫ OZON\n")
            f.write("# –î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã OZON, –∫–∞–∂–¥—É—é —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏\n")
            f.write("# –ü—Ä–∏–º–µ—Ä:\n")
            f.write("# https://www.ozon.ru/product/example-123456789/\n")
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª links.json")
    else:
        print("‚úÖ –§–∞–π–ª links.json –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        print("üìù –°–æ–∑–¥–∞—é —Ñ–∞–π–ª .env...")
        with open('.env', 'w', encoding='utf-8') as f:
            f.write("# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è OZONParser\n")
            f.write("TELEGRAM_BOT_TOKEN=your_bot_token_here\n")
            f.write("TELEGRAM_CHAT_ID=your_chat_id_here\n")
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env")
    else:
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    
    return True

def clean_build_dirs():
    """–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –ø–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏"""
    dirs_to_clean = ['build', 'dist', '__pycache__']
    
    for dir_name in dirs_to_clean:
        if os.path.exists(dir_name):
            try:
                shutil.rmtree(dir_name)
                print(f"üßπ –û—á–∏—â–µ–Ω–∞ –ø–∞–ø–∫–∞: {dir_name}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å {dir_name}: {e}")

def check_and_fix_pathlib():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–∞–∫–µ—Ç pathlib"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å PyInstaller...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–∞–∫–µ—Ç pathlib
        result = subprocess.run([
            sys.executable, '-m', 'pip', 'show', 'pathlib'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –ø–∞–∫–µ—Ç 'pathlib'")
            print("üîß –£–¥–∞–ª—è—é –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –ø–∞–∫–µ—Ç...")
            
            # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–∞–∫–µ—Ç
            uninstall_result = subprocess.run([
                sys.executable, '-m', 'pip', 'uninstall', 'pathlib', '-y'
            ], capture_output=True, text=True)
            
            if uninstall_result.returncode == 0:
                print("‚úÖ –ü–∞–∫–µ—Ç 'pathlib' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                return True
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–∫–µ—Ç–∞ 'pathlib':")
                print(uninstall_result.stderr)
                return False
        else:
            print("‚úÖ –ü–∞–∫–µ—Ç 'pathlib' –Ω–µ –Ω–∞–π–¥–µ–Ω - –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ")
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–∞–∫–µ—Ç–∞ 'pathlib': {e}")
        return False

def create_spec_file_with_dynamic_paths(main_file='main.py', app_name='OZONParser', icon_path='logo.ico'):
    """–°–æ–∑–¥–∞–µ—Ç .spec —Ñ–∞–π–ª —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –ø—É—Ç—è–º–∏"""
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫ selenium_stealth
    stealth_path, js_path = get_selenium_stealth_path()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏
    if not os.path.exists(icon_path):
        print(f"‚ö†Ô∏è  –ò–∫–æ–Ω–∫–∞ {icon_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞—é –±–µ–∑ –∏–∫–æ–Ω–∫–∏")
        icon_line = ""
    else:
        print(f"‚úÖ –ò–∫–æ–Ω–∫–∞ –Ω–∞–π–¥–µ–Ω–∞: {icon_path}")
        icon_line = f"    icon='{icon_path}',"
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    data_files = []
    additional_files = [
        'links.json',
        'config.txt', 
        'settings.json',
        '.env'
    ]
    
    print("üîç –ü–æ–∏—Å–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    for file in additional_files:
        if os.path.exists(file):
            data_files.append(f"('{file}', '.')")
            print(f"  ‚úÖ {file}")
        else:
            print(f"  ‚ö†Ô∏è  {file} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –î–æ–±–∞–≤–ª—è–µ–º selenium_stealth JS —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã
    if js_path and os.path.exists(js_path):
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç—å –¥–ª—è Windows
        js_path_normalized = js_path.replace('\\', '\\\\')
        data_files.append(f"(r'{js_path_normalized}', 'selenium_stealth/js')")
        print(f"  ‚úÖ selenium_stealth JS —Ñ–∞–π–ª—ã: {js_path}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
    if data_files:
        datas_line = f"datas=[{', '.join(data_files)}],"
        print(f"üì¶ –ë—É–¥—É—Ç –≤–∫–ª—é—á–µ–Ω—ã —Ñ–∞–π–ª—ã: {len(data_files)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
    else:
        datas_line = "datas=[],"
        print("üì¶ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –°–æ–∑–¥–∞–µ–º .spec —Ñ–∞–π–ª
    spec_content = f"""# -*- mode: python ; coding: utf-8 -*-
# Auto-generated spec file for {app_name}

block_cipher = None

a = Analysis(
    ['{main_file}'],
    pathex=[],
    binaries=[],
    {datas_line}
    hiddenimports=[
        'selenium', 
        'selenium_stealth',
        'undetected_chromedriver',
        'aiogram',
        'dotenv',
        'requests',
        'bs4',
        'lxml'
    ],
    hookspath=[],
    hooksconfig={{}},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='{app_name}',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,{icon_line}
)
"""
    
    spec_filename = f'{app_name}.spec'
    
    with open(spec_filename, 'w', encoding='utf-8') as f:
        f.write(spec_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {spec_filename}")
    print(f"üéØ –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: {app_name}")
    print(f"üñºÔ∏è  –ö–æ–Ω—Å–æ–ª—å: –û—Ç–∫–ª—é—á–µ–Ω–∞ (GUI —Ä–µ–∂–∏–º)")
    return spec_filename

def simple_build_exe(main_file='main.py', app_name='OZONParser'):
    """–ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ –±–µ–∑ .spec —Ñ–∞–π–ª–∞"""
    print("üîÑ –ü—Ä–æ–±—É—é –ø—Ä–æ—Å—Ç—É—é —Å–±–æ—Ä–∫—É –±–µ–∑ .spec —Ñ–∞–π–ª–∞...")
    
    try:
        # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ PyInstaller
        cmd = [
            sys.executable, '-m', 'PyInstaller',
            '--onefile',  # –û–¥–∏–Ω —Ñ–∞–π–ª
            '--noconsole',  # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
            '--clean',  # –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à
            f'--name={app_name}',  # –ò–º—è
        ]
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        if os.path.exists('links.json'):
            cmd.extend(['--add-data', 'links.json;.'])
        if os.path.exists('.env'):
            cmd.extend(['--add-data', '.env;.'])
            
        cmd.extend(['--add-data', 'config.txt.'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if os.path.exists('logo.ico'):
            cmd.extend(['--icon', 'logo.ico'])
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        hidden_imports = [
            'selenium', 'selenium_stealth', 'undetected_chromedriver',
            'aiogram', 'dotenv', 'requests', 'bs4', 'lxml'
        ]
        
        for imp in hidden_imports:
            cmd.extend(['--hidden-import', imp])
        
        cmd.append(main_file)
        
        print(f"üöÄ –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É: {' '.join(cmd)}")
        
        result = subprocess.run(cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ {app_name}.exe —Å–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç—ã–º –º–µ—Ç–æ–¥–æ–º!")
            return True
        else:
            print("‚ùå –ü—Ä–æ—Å—Ç–∞—è —Å–±–æ—Ä–∫–∞ —Ç–æ–∂–µ –Ω–µ —É–¥–∞–ª–∞—Å—å:")
            print("STDERR:", result.stderr[-1000:])
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Å—Ç–æ–π —Å–±–æ—Ä–∫–∏: {e}")
        return False

def build_exe(main_file='main.py', app_name='OZONParser', icon_path='logo.ico'):
    """–ü–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è .exe —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º –ø—É—Ç–µ–π"""
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å–±–æ—Ä–∫–∏
    clean_build_dirs()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
    check_and_create_files()
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å pathlib
    if not check_and_fix_pathlib():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –ø–∞–∫–µ—Ç–æ–º 'pathlib'")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É:")
        print(f"   {sys.executable} -m pip uninstall pathlib -y")
        return False
    
    print("üîç –°–æ–∑–¥–∞–Ω–∏–µ .spec —Ñ–∞–π–ª–∞ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ –ø—É—Ç—è–º–∏...")
    spec_file = create_spec_file_with_dynamic_paths(main_file, app_name, icon_path)
    
    if not spec_file:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å .spec —Ñ–∞–π–ª")
        return False
    
    print(f"üöÄ –°–±–æ—Ä–∫–∞ {app_name}.exe...")
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller
        result = subprocess.run([
            sys.executable, '-m', 'PyInstaller',  # –ò—Å–ø–æ–ª—å–∑—É–µ–º python -m PyInstaller
            '--clean',  # –û—á–∏—â–∞–µ–º –∫–µ—à
            spec_file
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ {app_name}.exe —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
            print("üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É dist/")
            print("üéØ –ö–æ–Ω—Å–æ–ª—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ —á–µ—Ä–Ω–æ–≥–æ –æ–∫–Ω–∞")
            print("üñºÔ∏è  –ò–∫–æ–Ω–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (–µ—Å–ª–∏ logo.ico –Ω–∞–π–¥–µ–Ω–∞)")
            print("üì¶ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –≤–∫–ª—é—á–µ–Ω—ã –≤ .exe")
            print("üí° –§–∞–π–ª—ã links.json, .env –∏ selenium_stealth JS –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            exe_path = Path(f"dist/{app_name}.exe") 
            if exe_path.exists():
                size_mb = exe_path.stat().st_size / (1024 * 1024)
                print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.1f} MB")
            
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ:")
            print("\n--- –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –û–®–ò–ë–ö–ï ---")
            if result.stdout:
                print("üìã STDOUT:")
                print(result.stdout[-2000:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤
            if result.stderr:
                print("üö® STDERR:")
                print(result.stderr[-2000:])  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2000 —Å–∏–º–≤–æ–ª–æ–≤
            print("--- –ö–û–ù–ï–¶ –ò–ù–§–û–†–ú–ê–¶–ò–ò –û–ë –û–®–ò–ë–ö–ï ---\n")
            
            # –ü—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Å–±–æ—Ä–∫—É
            print("üîÑ –ü—Ä–æ–±—É—é –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏...")
            return simple_build_exe(main_file, app_name)
            
    except FileNotFoundError:
        print("‚ùå PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyInstaller
            install_result = subprocess.run([
                sys.executable, '-m', 'pip', 'install', 'pyinstaller'
            ], capture_output=True, text=True)
            
            if install_result.returncode == 0:
                print("‚úÖ PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                # –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É —Å–±–æ—Ä–∫–∏
                return build_exe(main_file, app_name, icon_path)
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyInstaller:")
                print(install_result.stderr)
                return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ PyInstaller: {e}")
            return False

def create_selenium_stealth_fallback():
    """–°–æ–∑–¥–∞–µ—Ç fallback JS —Ñ–∞–π–ª—ã –¥–ª—è selenium_stealth –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    print("üîß –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ JS —Ñ–∞–π–ª—ã –¥–ª—è selenium_stealth...")
    
    js_dir = Path('selenium_stealth_js')
    js_dir.mkdir(exist_ok=True)
    
    js_files = {
        'utils.js': '''
// utils.js –¥–ª—è selenium-stealth
(function() {
    'use strict';
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
    if (navigator.webdriver) {
        delete navigator.webdriver;
    }
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º navigator.webdriver
    Object.defineProperty(navigator, 'webdriver', {
        get: () => undefined,
    });
    
    // –°–∫—Ä—ã–≤–∞–µ–º automation
    window.chrome = {
        runtime: {},
    };
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º plugins
    Object.defineProperty(navigator, 'plugins', {
        get: () => [1, 2, 3, 4, 5],
    });
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º languages
    Object.defineProperty(navigator, 'languages', {
        get: () => ['ru-RU', 'ru'],
    });
    
})();
        ''',
        
        'chrome_runtime.js': '''
// chrome_runtime.js
window.chrome = {
    runtime: {},
};
        ''',
        
        'navigator_vendor.js': '''
// navigator_vendor.js
Object.defineProperty(navigator, 'vendor', {
    get: () => 'Google Inc.',
});
        ''',
        
        'navigator_plugins.js': '''
// navigator_plugins.js  
Object.defineProperty(navigator, 'plugins', {
    get: () => [1, 2, 3, 4, 5],
});
        '''
    }
    
    # –°–æ–∑–¥–∞–µ–º JS —Ñ–∞–π–ª—ã
    for filename, content in js_files.items():
        js_file = js_dir / filename
        js_file.write_text(content.strip(), encoding='utf-8')
        print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω: {js_file}")
    
    print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω—ã–µ JS —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –≤: {js_dir}")
    return str(js_dir)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üõ†Ô∏è –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–±–æ—Ä—â–∏–∫ OZONParser.exe")
    print("=" * 50)
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    main_file = "main.py"
    app_name = "OZONParser"
    icon_path = "logo.ico"
    
    print(f"üìÑ –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª: {main_file}")
    print(f"üéØ –ù–∞–∑–≤–∞–Ω–∏–µ: {app_name}.exe")
    print(f"üñºÔ∏è  –ö–æ–Ω—Å–æ–ª—å: –û—Ç–∫–ª—é—á–µ–Ω–∞")
    print(f"üé® –ò–∫–æ–Ω–∫–∞: {icon_path}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ main.py
    if not os.path.exists(main_file):
        print(f"‚ùå –§–∞–π–ª {main_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª main.py –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º selenium_stealth
    stealth_path, js_path = get_selenium_stealth_path()
    if not stealth_path:
        print("‚ö†Ô∏è  selenium_stealth –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ —Ñ–∞–π–ª—ã...")
        create_selenium_stealth_fallback()
    
    # –°–æ–∑–¥–∞–µ–º .exe
    success = build_exe(main_file, app_name, icon_path)
    
    if success:
        print()
        print("üéâ –ì–æ—Ç–æ–≤–æ! OZONParser.exe —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –§–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ dist/")
        print("‚ú® –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –∫–æ–Ω—Å–æ–ª–∏")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –ª—é–±–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ!")
        print("üîß selenium_stealth JS —Ñ–∞–π–ª—ã –≤–∫–ª—é—á–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        
    else:
        print()
        print("‚ùå –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .exe")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ main.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("   4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:")
        print("      pip install selenium selenium-stealth undetected-chromedriver")

if __name__ == "__main__":
    main()