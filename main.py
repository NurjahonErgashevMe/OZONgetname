import logging
import re
import os
import sys
from src.parser.link_parser import OzonLinkParser
from src.parser.main_parser import OzonProductParser
from src.config import *

def setup_logging():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    log_dir = os.path.dirname(LOG_FILE)
    if log_dir and not os.path.exists(log_dir):
        os.makedirs(log_dir)
    
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler(),
            logging.FileHandler(LOG_FILE, encoding='utf-8')
        ]
    )

def read_links():
    """–ß—Ç–µ–Ω–∏–µ —Å—Å—ã–ª–æ–∫ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(LINKS_OUTPUT_FILE, 'r', encoding='utf-8') as f:
            return [line.strip() for line in f if line.strip()]
    except FileNotFoundError:
        logging.error(f"–§–∞–π–ª {LINKS_OUTPUT_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return []
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —Å—Å—ã–ª–æ–∫: {str(e)}")
        return []

def validate_ozon_url(url):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω—ã–º URL Ozon"""
    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤—Å–µ—Ö –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
    if not re.search(r'([a-z]+\.)?ozon\.(ru|kz|com|by|uz)', url, re.IGNORECASE):
        return False
    if "/category/" not in url:
        return False
    return True

def get_category_from_url(url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ URL"""
    match = re.search(r'/category/([^/?]+)', url)
    return match.group(1) if match else "unknown_category"

def get_user_input():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π"""
    while True:
        try:
            target_url = input("\n–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Ozon (–∏–ª–∏ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞): ")
            target_url = target_url.strip()
            
            if target_url.lower() == 'exit':
                print("–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
                sys.exit(0)
            
            if not target_url:
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É!")
                continue
            
            if not validate_ozon_url(target_url):
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞! –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫:")
                print("   - https://www.ozon.ru/category/sistemnye-bloki-15704/")
                print("   - https://uz.ozon.com/category/kompyuternye-i-ofisnye-kresla-38450/")
                continue
            
            category_name = get_category_from_url(target_url)
            print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}")
            
            return target_url, category_name
            
        except KeyboardInterrupt:
            print("\n\n–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã...")
            sys.exit(0)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {str(e)}")
            continue

def print_progress_header():
    """–ü–µ—á–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"""
    print("\n" + "="*60)
    print("           –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–†–°–ï–†–ê OZON")
    print("="*60)
    print(f"–¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫: {TOTAL_LINKS}")
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤: {WORKER_COUNT}")
    print(f"–§–∞–π–ª –ª–æ–≥–æ–≤: {LOG_FILE}")
    print("="*60)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        setup_logging()
        logger = logging.getLogger('main')
        
        print("üöÄ –ü–ê–†–°–ï–† OZON –ó–ê–ü–£–©–ï–ù")
        print_progress_header()
        
        # –ó–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        target_url, category_name = get_user_input()
        
        # –≠—Ç–∞–ø 1: –ü–∞—Ä—Å–∏–Ω–≥ —Å—Å—ã–ª–æ–∫
        print(f"\nüì° –≠–¢–ê–ü 1: –°–ë–û–† –°–°–´–õ–û–ö –ù–ê –¢–û–í–ê–†–´")
        print(f"–¶–µ–ª—å: —Å–æ–±—Ä–∞—Ç—å {TOTAL_LINKS} —Å—Å—ã–ª–æ–∫ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category_name}'")
        
        logger.info("=== –ó–ê–ü–£–°–ö –ü–ê–†–°–ï–†–ê OZON ===")
        logger.info(f"–¶–µ–ª–µ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {target_url}")
        logger.info(f"–¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫: {TOTAL_LINKS}")
        
        link_parser = OzonLinkParser(target_url)
        success, product_urls = link_parser.run()
        
        if not success or not product_urls:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å —Å—Å—ã–ª–∫–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å —Å—Å—ã–ª–∫–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
            return 1
        
        print(f"‚úÖ –°–æ–±—Ä–∞–Ω–æ {len(product_urls)} —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ç–æ–≤–∞—Ä—ã")
        
        # –≠—Ç–∞–ø 2: –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤
        print(f"\nüîç –≠–¢–ê–ü 2: –ü–ê–†–°–ò–ù–ì –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –¢–û–í–ê–†–ê–•")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(product_urls)}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤: {WORKER_COUNT}")
        print("–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É...")
        
        logger.info("=== –≠–¢–ê–ü 2: –ü–ê–†–°–ò–ù–ì –¢–û–í–ê–†–û–í ===")
        logger.info(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(product_urls)}")
        logger.info(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ—Ä–∫–µ—Ä–æ–≤: {WORKER_COUNT}")
        
        product_parser = OzonProductParser(category_name)
        
        if product_parser.run(product_urls):
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            summary = product_parser.get_results_summary()
            
            print(f"\nüéâ –ü–ê–†–°–ò–ù–ì –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!")
            print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {summary['total']}")
            print(f"   ‚Ä¢ –£—Å–ø–µ—à–Ω–æ: {summary['success']}")
            print(f"   ‚Ä¢ –¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è: {summary['out_of_stock']}")
            print(f"   ‚Ä¢ –û—à–∏–±–∫–∏: {summary['error']}")
            print(f"üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {os.path.abspath(product_parser.excel_filename)}")
            
            logger.info("=== –ü–ê–†–°–ò–ù–ì –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù ===")
            logger.info(f"–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {os.path.abspath(product_parser.excel_filename)}")
            
            return 0
        else:
            print("‚ùå –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò")
            logger.error("=== –ü–ê–†–°–ò–ù–ì –ó–ê–í–ï–†–®–ï–ù –° –û–®–ò–ë–ö–ê–ú–ò ===")
            return 1
            
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è!")
        logger.warning("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 1
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}", exc_info=True)
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)